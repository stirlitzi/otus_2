#include "gtest/gtest.h"
#include"ip_filter.h"


TEST(TEST_SORT, REVERSE_SORT) {
    stringstream ss;
    ss << R"(222.173.235.246
222.82.198.61
1.70.44.170
1.29.168.152
1.1.234.8
)";
    multiset<Ip> ip_pool_test = {{222, 173, 235, 246},
                            {1,   70,  44,  170},
                            {1,   1,   234, 8},
                            {222, 82,  198, 61},
                            {1,   29,  168, 152}};

    stringstream sout = filter(ip_pool_test, 0, 0);
    ASSERT_EQ(sout.str(), ss.str());
}

TEST(TEST_SORT, SORT_BY_FIRST_BYTE) {

    // 1.231.69.33
    // 1.87.203.225
    // 1.70.44.170
    // 1.29.168.152
    // 1.1.234.8

    stringstream ss;
    ss << R"(1.231.69.33
1.87.203.225
1.70.44.170
1.29.168.152
1.1.234.8
)";
    multiset<Ip> ip_pool_test = {{222, 173, 235, 246},
                            {1,   70,  44,  170},
                            {1,   87,  203, 225},
                            {1,   1,   234, 8},
                            {222, 82,  198, 61},
                            {1,   231, 69,  33},
                            {1,   29,  168, 152}};

    stringstream sout = filter(ip_pool_test, 1, 0);
    ASSERT_EQ(sout.str(), ss.str());
}
TEST(TEST_SORT, SORT_BY_FIRST_AND_SECOND_BYTE) {

    // 46.70.225.39
    // 46.70.147.26
    // 46.70.113.73
    // 46.70.29.76

    stringstream ss;
    ss << R"(46.70.225.39
46.70.147.26
46.70.113.73
46.70.29.76
)";
    multiset<Ip> ip_pool_test = {{222, 173, 235, 246},
                            {1,   70,  44,  170},
                            {1,   87,  203, 225},
                            {46,  70,  225, 39},
                            {46,  70,  147, 26},
                            {1,   231, 69,  33},
                            {46,  70,  29,  76},
                            {46,  70,  113, 73}};

    stringstream sout = filter(ip_pool_test, 46, 70);
    ASSERT_EQ(sout.str(), ss.str());
}

TEST(TEST_SORT, SORT_BY_ANY_BYTE) {

    //186.204.34.46
    // 186.46.222.194
    // 185.46.87.231
    // 185.46.86.132
    // 185.46.86.131
    // 185.46.86.131
    // 185.46.86.22
    // 185.46.85.204
    // 185.46.85.78
    // 68.46.218.208
    // 46.251.197.23
    // 46.223.254.56
    // 46.223.254.56
    // 46.182.19.219
    // 46.161.63.66
    // 46.161.61.51
    // 46.161.60.92
    // 46.161.60.35
    // 46.161.58.202
    // 46.161.56.241
    // 46.161.56.203
    // 46.161.56.174
    // 46.161.56.106
    // 46.161.56.106
    // 46.101.163.119
    // 46.101.127.145
    // 46.70.225.39
    // 46.70.147.26
    // 46.70.113.73
    // 46.70.29.76
    // 46.55.46.98
    // 46.49.43.85
    // 39.46.86.85
    // 5.189.203.46

    stringstream ss;
    ss << R"(186.204.34.46
186.46.222.194
185.46.87.231
185.46.86.132
185.46.86.131
185.46.86.131
185.46.86.22
185.46.85.204
185.46.85.78
68.46.218.208
46.251.197.23
46.223.254.56
46.223.254.56
46.182.19.219
46.161.56.106
46.101.163.119
46.55.46.98
46.49.43.85
39.46.86.85
5.189.203.46
)";
    multiset<Ip> ip_pool_test = {{186, 204, 34,  46},
                            {186, 46,  222, 194},
                            {185, 46,  87,  231},
                            {185, 46,  86,  132},
                            {185, 46,  86,  131},
                            {185, 46,  86,  131},
                            {185, 46,  86,  22},
                            {185, 46,  85,  204},
                            {185, 46,  85,  78},
                            {68,  46,  218, 208},
                            {46,  251, 197, 23},
                            {46,  223, 254, 56},
                            {46,  223, 254, 56},
                            {46,  182, 19,  219},
                            {46,  161, 56,  106},
                            {46,  101, 163, 119},
                            {46,  55,  46,  98},
                            {46,  49,  43,  85},
                            {39,  46,  86,  85},
                            {5,   189, 203, 46}};

    stringstream sout = filter(ip_pool_test, 46, 0);
    ASSERT_EQ(sout.str(), ss.str());
}


int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}